package org.geoint.acetate.model.registry;

import java.util.Optional;
import org.geoint.acetate.model.DomainModel;

/**
 * Model registry for domain models, their components, and acetate layers
 * defined against them.
 *
 * All operations on DomainRegistry implementations must be atomic and
 * thread-safe.
 */
public interface DomainRegistry {

    /**
     * Check if the requested domain model is already registered.
     *
     * @param domainModelName name of the domain model
     * @param version version of the domain model
     * @return true if registered, otherwise false
     */
    boolean isRegistered(String domainModelName, long version);

    /**
     * Returns the requested domain model, if registered.
     *
     * @param domainModelName globally unique domain model name
     * @param version domain model version
     * @return domain model, if registered
     */
    Optional<DomainModel> getModel(String domainModelName, long version);

    /**
     * Register a DomainModel with the registry, returning a unique domain model
     * identifier.
     *
     *
     * @param model domain model
     * @return unique domain model identifier generated by the registry
     */
    String register(DomainModel model);

}
